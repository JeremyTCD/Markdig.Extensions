<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArgumentException_BaseUriMustBeAbsolute" xml:space="preserve">
    <value>Base URI must be absolute , received "{0}".</value>
  </data>
  <data name="ArgumentException_BaseUriMustBeDefinedIfSourceIsNotAnAbsoluteUri" xml:space="preserve">
    <value>Since source "{0}" is not an absolute URI, base URI cannot be null, white space or an empty string.</value>
  </data>
  <data name="ArgumentException_InvalidCacheDirectory" xml:space="preserve">
    <value>The directory to be used for file caching, "{0}" is invalid. Refer to the inner exception for details. </value>
  </data>
  <data name="ArgumentException_InvalidEnumArgument" xml:space="preserve">
    <value>"{0}" has the value "{1}", which is not a valid value for the enum "{2}".</value>
  </data>
  <data name="ArgumentException_MustBeDefined" xml:space="preserve">
    <value>"{0}" must be defined.</value>
  </data>
  <data name="ArgumentException_NotAValidUri" xml:space="preserve">
    <value>"{0}" is not a valid  URI .</value>
  </data>
  <data name="ArgumentException_OnlyOneArgumentCanBeDefined" xml:space="preserve">
    <value>Only one of "{0}" of "{1}" can be defined.</value>
  </data>
  <data name="ArgumentException_StartCharIndexIsOutOfRange" xml:space="preserve">
    <value>Text has length "{0}", start char index "{1}" is out of range.</value>
  </data>
  <data name="ArgumentException_UriSchemeUnsupported" xml:space="preserve">
    <value> URI  "{0}" has unsupported scheme "{1}".</value>
  </data>
  <data name="ArgumentException_ValueCannotBeNullOrAnEmptyString" xml:space="preserve">
    <value>Value cannot not be null or an empty string.</value>
  </data>
  <data name="ArgumentException_ValueCannotBeNullWhiteSpaceOrAnEmptyString" xml:space="preserve">
    <value>Value cannot be null, white space or an empty string.</value>
  </data>
  <data name="ArgumentOutOfRangeException_CountCannotBeNegativeOrGreaterThanTheNumberOfEmptyElementsInBuffer" xml:space="preserve">
    <value>Value cannot be negative or greater than the number of empty elements in buffer.</value>
  </data>
  <data name="ArgumentOutOfRangeException_EndLineNumberMustBeMinus1OrGreaterThanOrEqualToStartLineNumber" xml:space="preserve">
    <value>End line number "{0}" with associated start line number "{1}" is invalid. Unless an end line number is -1, it cannot be less than its associated start line number.</value>
  </data>
  <data name="ArgumentOutOfRangeException_LineNumberMustBeGreaterThan0" xml:space="preserve">
    <value>"{0}" is not a valid line number. Line numbers must be greater than 0.</value>
  </data>
  <data name="ArgumentOutOfRangeException_ValueCannotBeNegative" xml:space="preserve">
    <value>Value cannot be negative. The specified value "{0}" is invalid.</value>
  </data>
  <data name="ArgumentOutOfRangeException_ValueMustBeWithinRange" xml:space="preserve">
    <value>Value must be within range {0}. The specified value "{1}" is invalid.</value>
  </data>
  <data name="ArgumentOutOfRangeException_ValueMustBeWithinTheIntervalContainingBuffersIndices" xml:space="preserve">
    <value>Value must be within the interval containing "{0}"'s indices.</value>
  </data>
  <data name="ContentRetrieverException_FailedAfterMultipleAttempts" xml:space="preserve">
    <value>Multiple attempts retrieve content from "{0}" have failed. Please ensure that the Url is valid and that your network connection is stable. Enable debug level logging and try again for more information on why requests are failing.</value>
  </data>
  <data name="ContentRetrieverException_RemoteUriAccessForbidden" xml:space="preserve">
    <value>Access to the remote Url "{0}" is forbidden.</value>
  </data>
  <data name="ContentRetrieverException_RemoteUriDoesNotExist" xml:space="preserve">
    <value>The remote Url "{0}" does not exist.</value>
  </data>
  <data name="FlexiBlocksException_InvalidFlexiBlock" xml:space="preserve">
    <value>The {0} starting at line "{1}", column "{2}", is invalid:
{3}</value>
  </data>
  <data name="FlexiBlocksException_InvalidMarkdown" xml:space="preserve">
    <value>The markdown at line "{0}", column "{1}" is invalid:
{2}</value>
  </data>
  <data name="FlexiBlocksException_MispositionedFlexiOptionsBlock" xml:space="preserve">
    <value>FlexiOptionsBlock must immediately precede the block that consumes it.</value>
  </data>
  <data name="FlexiBlocksException_UnableToParseJson" xml:space="preserve">
    <value>Unable to parse JSON "{0}". Refer to the inner exception for more details.</value>
  </data>
  <data name="FlexiBlocksException_UnableToSetOptions" xml:space="preserve">
    <value>Expected an "ExposedOptionsManager&lt;{0}&gt;" for service "IOptions&lt;{1}&gt;", unable to set "{1}".</value>
  </data>
  <data name="FlexiBlocksException_UnconsumedFlexiOptionsBlock" xml:space="preserve">
    <value>FlexiOptionsBlock must be consumed.</value>
  </data>
  <data name="FlexiBlocksException_UnexpectedException" xml:space="preserve">
    <value>An unexpected exception occurred. Refer to the inner exception for more details.</value>
  </data>
  <data name="FlexiBlocksException_UnexpectedExceptionWhileAttemptingToOpenBlock" xml:space="preserve">
    <value>An unexpected exception occurred in "{0}" while attempting to open a block. Refer to the inner exception for more details.</value>
  </data>
  <data name="HttpRequestException_UnsuccessfulRequest" xml:space="preserve">
    <value>Request to "{0}" failed with status code "{1}" and message "{2}".</value>
  </data>
  <data name="InvalidOperationException_CycleInIncludes" xml:space="preserve">
    <value>The following cycle was found in the includes tree: 
{0}</value>
  </data>
  <data name="InvalidOperationException_InvalidClippingNoLineContainsEndLineSubstring" xml:space="preserve">
    <value>Invalid clipping, no line contains end line substring "{0}".</value>
  </data>
  <data name="InvalidOperationException_InvalidClippingNoLineContainsStartLineSubstring" xml:space="preserve">
    <value>Invalid clipping, no line contains start line substring "{0}".</value>
  </data>
  <data name="InvalidOperationException_InvalidHighlightLineRange" xml:space="preserve">
    <value>The highlight line range "{0}" is not a subset of the actual number of lines, "{1}".</value>
  </data>
  <data name="InvalidOperationException_InvalidLineNumberLineRange" xml:space="preserve">
    <value>The line number line range "{0}" is not a subset of the actual number of lines, "{1}".</value>
  </data>
  <data name="InvalidOperationException_LineNumbersCannotOverlap" xml:space="preserve">
    <value>Invalid line number ranges: the line number ranges "{0}" and "{1}" overlap.</value>
  </data>
  <data name="InvalidOperationException_LineRangesForHighlightingCannotOverlap" xml:space="preserve">
    <value>Invalid line ranges for highlighting: the ranges "{0}" and "{1}" overlap.</value>
  </data>
</root>